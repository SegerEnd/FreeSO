<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>
	  <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
    <ApplicationIcon>../FSO.Server/FreeSO.ico</ApplicationIcon>
    <IsAotCompatible>True</IsAotCompatible>
    <PublishAot>false</PublishAot>
    <PublishTrimmed>true</PublishTrimmed>
    <IsAotCompatible>false</IsAotCompatible>
    <TrimMode>partial</TrimMode>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="../FSO.Server/FreeSO.ico" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="SixLabors.ImageSharp" Version="3.1.11" />
    <PackageReference Include="System.IO.FileSystem.Primitives" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FSO.Server.Api.Core\FSO.Server.Api.Core.csproj" />
    <ProjectReference Include="..\FSO.Server\FSO.Server.csproj" />
    <ProjectReference Include="..\tso.content\FSO.Content.csproj" />
    <ProjectReference Include="..\tso.client\FSO.Client.csproj" />
    <ProjectReference Include="..\tso.common\FSO.Common.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <BuildDocker Condition="'$(BuildDocker)' == ''">false</BuildDocker>
  </PropertyGroup>
  <Target Name="BuildDockerImage" AfterTargets="Build" Condition="'$(OS)' == 'Windows_NT' AND '$(Configuration)' == 'Release' AND '$(BuildDocker)' == 'true'">
    <Copy SourceFiles="$(MSBuildThisFileDirectory)/../FSO.Server/config.sample.json"
          DestinationFolder="$(MSBuildThisFileDirectory)" 
          SkipUnchangedFiles="true" />
    
    <PropertyGroup>
      <DockerImageName>fso-server:latest</DockerImageName>
      <DockerTarPath>$(OutputPath)fso-server.docker.tar</DockerTarPath>
    </PropertyGroup>

    <Exec Command="docker build --no-cache -f $(MSBuildThisFileDirectory)Dockerfile -t $(DockerImageName) $(MSBuildThisFileDirectory)" />

    <!-- <Exec Command="docker save -o &quot;$(DockerTarPath)&quot; $(DockerImageName)" /> -->
  </Target>

</Project>
